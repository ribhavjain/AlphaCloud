/* A PlanObject is a concrete instance of a PlanTypeObject 
 */

export class PlanObject {
    _id: string; // Assigned by MongoDB
    plan_id:string; // Generated by client, incremented by server
    planType_id:string; // MongoID of planType plan uses
    revisions: any[][]; // 2D array of ObjectIDs to store major & minor revisions
    latestRev: string; // ObjectID of latest plan revision
    programName: string ; // Survey Name
    pcProgramName: string; // This is the actual program name obtained from Program Central
    planType: string; // Type of plan
    lastUpdated: string; // When changes were last made
    lastUpdatedBy: string; // Who made last changes
    readAccess: string[]; // Users who can view the plan
    writeAccess: string[]; // Users who can edit the plan
    creator: string; // User who created plan
    editLock: boolean; // Whether another user currently editing
    currentEditor: string; // Who is currently editing
    progress:number; // % of plan that is completed
    parents:string[]=[]; // Links to parents
    peers:string[]=[]; // Links to peers
    children:string[]=[]; // Links to children

    constructor(_id:string, plan_id:string, planType_id:string, programName:string, pcProgramName:string, planType:string, lastUpdated:string, revisions:any[][], latestRev: any,
        lastUpdatedBy:string, readAccess: string[], writeAccess: string[], creator:string, parents:string[], peers:string[], children:string[], progress?:number) {
        this._id = _id;
        this.plan_id = plan_id;
        this.planType_id = planType_id;
        this.revisions = revisions;
        this.latestRev = latestRev;
        this.programName = programName;
        this.pcProgramName = pcProgramName;
        this.planType = planType;
        this.lastUpdated = lastUpdated;
        this.lastUpdatedBy = lastUpdatedBy;
        this.readAccess = readAccess;
        this.writeAccess = writeAccess;
        this.creator = creator;
        this.editLock = false;
        this.currentEditor= "";
        if (progress != null) {
            this.progress = progress;
        }
        this.parents = parents;
        this.peers = peers;
        this.children = children;
    }
}